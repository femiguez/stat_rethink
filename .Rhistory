Asym ~ rotation + (1 | year.f/plot_id),
xmid + scal ~ rotation + (1 | year.f),
nl = TRUE)
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 1000, cores = 3, chains = 3,
control = list(adapt_delta = 0.9))
brm1
## Plots look good
plot(brm1, "^b_Asym")
plot(brm1, "^b_xmid")
plot(brm1, "^b_scal")
plot(brm1, "^sd_")
plot(brm1, "sigma")
pairs(brm1, "^b_")
plot(conditional_effects(brm1), points = TRUE)
## Compare parameters
## nlme fm3 vs. brm1
round(fixef(fm3), 3)
round(fixef(brm1), 3)
## Setting up priors for brms
priors <- prior(normal(1, 1), nlpar = "Asym", coef = "Intercept") +
prior(normal(0, 2), nlpar = "Asym", coef = "rotation4y") +
prior(normal(50, 20), nlpar = "xmid", coef = "Intercept") +
prior(normal(0, 5), nlpar = "xmid", coef = "rotation4y") +
prior(normal(10, 5), nlpar = "scal", coef = "Intercept") +
prior(normal(0, 2), nlpar = "scal", coef = "rotation4y") +
prior(student_t(5, 0, 1), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(5, 0, 10), nlpar = "xmid", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(5, 0, 4), nlpar = "scal", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(30, 0, 0.15), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f:plot_id") +
prior(student_t(100, 0, 0.25), class = "sigma")
## Some of this is based on the insight from the NLME
bf1 <- bf(rootdepth_m ~ Asym / (1 + exp((xmid - dap)/scal)),
Asym ~ rotation + (1 | year.f/plot_id),
xmid + scal ~ rotation + (1 | year.f),
nl = TRUE)
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 1000, cores = 3, chains = 3,
control = list(adapt_delta = 0.9))
brm1
## Setting up priors for brms
priors <- prior(normal(1, 1), nlpar = "Asym", coef = "Intercept") +
prior(normal(0, 2), nlpar = "Asym", coef = "rotation4y") +
prior(normal(50, 20), nlpar = "xmid", coef = "Intercept") +
prior(normal(0, 5), nlpar = "xmid", coef = "rotation4y") +
prior(normal(10, 5), nlpar = "scal", coef = "Intercept") +
prior(normal(0, 2), nlpar = "scal", coef = "rotation4y") +
prior(student_t(5, 0, 1), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(5, 0, 10), nlpar = "xmid", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 4), nlpar = "scal", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(30, 0, 0.15), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f:plot_id") +
prior(student_t(100, 0, 0.25), class = "sigma")
## Some of this is based on the insight from the NLME
bf1 <- bf(rootdepth_m ~ Asym / (1 + exp((xmid - dap)/scal)),
Asym ~ rotation + (1 | year.f/plot_id),
xmid + scal ~ rotation + (1 | year.f),
nl = TRUE)
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 1000, cores = 3, chains = 3,
control = list(adapt_delta = 0.95))
brm1
library(nlme)
library(emmeans)
library(ggplot2)
library(nlraa)
## Using the Oats dataset
data(Oats)
## For the purpose of illustration I'm pretending
## that nitro is a factor
Oats$nitro_f <- as.factor(Oats$nitro)
## Visualize the data
ggplot(data = Oats, aes(x = nitro_f, y = yield, color = Variety)) +
geom_point()
## Fit mixed model. Block is a random term, others are fixed
fm <- lme(yield ~ Variety + nitro_f + Variety:nitro_f, random = ~ 1 | Block, data = Oats)
## No evidence of interaction from anova table
anova(fm)
## Explore model assmptions
plot(fm) ## There should be no 'pattern' in this graph
qqnorm(fm, abline = c(0,1)) ## More or less follows a straight line
## Estimated means and confidence intervals for means
emmeans(fm, ~ Variety:nitro_f)
## Visualize
plot(emmeans(fm, ~ Variety:nitro_f))
## Test for comparisons
## This is all possible pairwise comparisons BY nitro_f
## because it might not make sense to compare Varieties across nitro_f levels
## You are probably just interested in some of them
contrast(emmeans(fm, ~Variety:nitro_f), by = "nitro_f", "pairwise")
## You can also visualize the differences
plot(contrast(emmeans(fm, ~Variety:nitro_f), by = "nitro_f", "pairwise"))
## In a better analysis 'nitro' is a numeric variable, not a factor
## Other slightly better models are possible, but I will keep it simple
## If one of your variables is naturally a number as opposed to a factor with discrete levels
## You need to carefully look at which model you should be fitting
fm2 <- lme(yield ~ Variety + nitro + Variety:nitro, random = ~ 1 | Block, data = Oats)
## Still no interaction
anova(fm2)
## Visualize differences by simulation
## This could be an alternative to emmeans
## level = means at the 'average' or 'population' level
## not at the level of 'block'
sim2 <- simulate_lme(fm2, nsim = 1e3, level = 0)
Oats$prd <- apply(sim2, 1, median)
Oats$lwr <- apply(sim2, 1, quantile, probs = 0.05)
Oats$upr <- apply(sim2, 1, quantile, probs = 0.95)
ggplot(data = Oats, aes(x = nitro, y = yield, color = Variety)) +
geom_point() +
facet_wrap(~Variety) +
geom_line(aes(y = prd)) +
geom_ribbon(aes(ymin = lwr, ymax = upr, fill = Variety, color = NULL), alpha = 0.3) +
ggtitle("Predictions and 90% intervals")
## emmeans can still be used to compare Varieties at a specific level of nitro
## 0.3 is an average value for nitro
emmeans(fm2, ~ Variety, at = list(nitro = 0.3))
## Also contrasts are possible
contrast(emmeans(fm2, ~ Variety, at = list(nitro = 0.3)), "pairwise")
## This gives the same answer
pairs(emmeans(fm2, ~ Variety, at = list(nitro = 0.3)))
pairs(brm1, "^b_")
pairs(brm1, "^sd_")
## Setting up priors for brms
priors <- prior(normal(1, 1), nlpar = "Asym", coef = "Intercept") +
prior(normal(0, 0.5), nlpar = "Asym", coef = "rotation4y") +
prior(normal(50, 20), nlpar = "xmid", coef = "Intercept") +
prior(normal(0, 5), nlpar = "xmid", coef = "rotation4y") +
prior(normal(10, 5), nlpar = "scal", coef = "Intercept") +
prior(normal(0, 1.5), nlpar = "scal", coef = "rotation4y") +
prior(student_t(5, 0, 1), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(5, 0, 10), nlpar = "xmid", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 4), nlpar = "scal", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(30, 0, 0.15), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f:plot_id") +
prior(student_t(100, 0, 0.25), class = "sigma")
## Some of this is based on the insight from the NLME
bf1 <- bf(rootdepth_m ~ Asym / (1 + exp((xmid - dap)/scal)),
Asym ~ rotation + (1 | year.f/plot_id),
xmid + scal ~ rotation + (1 | year.f),
nl = TRUE)
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 1000, cores = 3, chains = 3,
control = list(adapt_delta = 0.97))
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 1000, cores = 3, chains = 3,
control = list(adapt_delta = 0.99, max_treedepth = 15))
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 3000, cores = 3, chains = 3,
control = list(adapt_delta = 0.95))
## Plots look good
plot(brm1, "^b_Asym")
plot(brm1, "^b_xmid")
## Plots look good
plot(brm1, "^b_Asym")
plot(brm1, "^b_xmid")
plot(brm1, "^b_scal")
plot(brm1, "^sd_")
plot(brm1, "sigma")
plot(brm1, "^sd_")
## Setting up priors for brms
priors <- prior(normal(1, 0.5), nlpar = "Asym", coef = "Intercept") +
prior(normal(0, 0.5), nlpar = "Asym", coef = "rotation4y") +
prior(normal(50, 20), nlpar = "xmid", coef = "Intercept") +
prior(normal(0, 5), nlpar = "xmid", coef = "rotation4y") +
prior(normal(10, 5), nlpar = "scal", coef = "Intercept") +
prior(normal(0, 1.5), nlpar = "scal", coef = "rotation4y") +
prior(student_t(10, 0, 1), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 10), nlpar = "xmid", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 4), nlpar = "scal", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(30, 0, 0.15), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f:plot_id") +
prior(student_t(100, 0, 0.25), class = "sigma")
## Some of this is based on the insight from the NLME
bf1 <- bf(rootdepth_m ~ Asym / (1 + exp((xmid - dap)/scal)),
Asym ~ rotation + (1 | year.f/plot_id),
xmid + scal ~ rotation + (1 | year.f),
nl = TRUE)
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 3000, cores = 3, chains = 3,
control = list(adapt_delta = 0.95))
plot(density(rlnorm(1e4, 1, 0.5)))
hist(rlnorm(1e4, 1, 0.5))
hist(rexp(1e4, 1))
## Setting up priors for brms
priors <- prior(exponential(1), nlpar = "Asym", coef = "Intercept") +
prior(normal(0, 0.5), nlpar = "Asym", coef = "rotation4y") +
prior(normal(50, 20), nlpar = "xmid", coef = "Intercept") +
prior(normal(0, 5), nlpar = "xmid", coef = "rotation4y") +
prior(normal(10, 5), nlpar = "scal", coef = "Intercept") +
prior(normal(0, 1.5), nlpar = "scal", coef = "rotation4y") +
prior(student_t(10, 0, 1), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 10), nlpar = "xmid", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 4), nlpar = "scal", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(30, 0, 0.15), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f:plot_id") +
prior(student_t(100, 0, 0.25), class = "sigma")
## Some of this is based on the insight from the NLME
bf1 <- bf(rootdepth_m ~ Asym / (1 + exp((xmid - dap)/scal)),
Asym ~ rotation + (1 | year.f/plot_id),
xmid + scal ~ rotation + (1 | year.f),
nl = TRUE)
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 3000, cores = 3, chains = 3,
control = list(adapt_delta = 0.95))
hist(rlnorm(1e4, 1, 0.25))
hist(rlnorm(1e4, 0.25, 0.25))
hist(rlnorm(1e4, 0.2, 0.25))
hist(rlnorm(1e4, 0.1, 0.25))
hist(rlnorm(1e4, 0.1, 0.3))
## Setting up priors for brms
priors <- prior(lognormal(0.1, 0.3), nlpar = "Asym", coef = "Intercept") +
prior(normal(0, 0.5), nlpar = "Asym", coef = "rotation4y") +
prior(normal(50, 20), nlpar = "xmid", coef = "Intercept") +
prior(normal(0, 5), nlpar = "xmid", coef = "rotation4y") +
prior(normal(10, 5), nlpar = "scal", coef = "Intercept") +
prior(normal(0, 1.5), nlpar = "scal", coef = "rotation4y") +
prior(student_t(10, 0, 1), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 10), nlpar = "xmid", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 4), nlpar = "scal", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(30, 0, 0.15), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f:plot_id") +
prior(student_t(100, 0, 0.25), class = "sigma")
## Some of this is based on the insight from the NLME
bf1 <- bf(rootdepth_m ~ Asym / (1 + exp((xmid - dap)/scal)),
Asym ~ rotation + (1 | year.f/plot_id),
xmid + scal ~ rotation + (1 | year.f),
nl = TRUE)
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 3000, cores = 3, chains = 3,
control = list(adapt_delta = 0.95))
install.packages("brms")
library(tidyverse)
library(maRsden)
library(nlraa)
library(brms)
library(tidybayes)
library(nlme)
library(emmeans)
## Analyze Ordonez data first
ro <- read_csv("gina-proj/ordonez-figdata.csv")
ro %>%
ggplot(aes(dap, rootdepth_cm)) +
geom_point(size = 3, alpha = 0.5) +
labs(title= "Data From Ordonez et al. 2018",
x = "Days After Planting",
y = "Root Depth (cm)")
## Subset and fit nonlinear model
ro_max <- ro %>%
filter(rootdepth_cm <= max(rootdepth_cm))
fm2a <- nls(rootdepth_cm ~ SSlogis(dap, Asym, xmid, scal), data = ro_max)
confint(fm2a)
plot(fm2a)
## How to think about priors
plot(density(rnorm(50, 120, 20)))
plot(density(rlnorm(2e3, log(120), 0.5)))
plot(density(rexp(2e3, log(120))))
## How do we fit a nonlinear mixed model using a frequentist approach?
rd <-
mrs_rootdepth %>%
left_join(mrs_plotkey) %>%
arrange(year, doy, plot_id) %>%
mutate(dop = ifelse(rootdepth_cm == 0, doy, NA)) %>%
fill(dop) %>%
mutate(dap = doy - dop)
fig_full <-
rd %>%
ggplot(aes(dap, rootdepth_cm)) +
geom_point(size = 3, alpha = 0.5, color = "blue") +
facet_grid(.~year) +
labs(title = "Full dataset, beta-growth candidate")
print(fig_full)
rd_max <-
rd %>%
filter(!(dap > 125 & year == 2020)) %>%
filter(!(dap > 100 & year == 2019))
fig_max <-
rd_max %>%
ggplot(aes(dap, rootdepth_cm, color = rot_trt)) +
geom_point(size = 3, alpha = 0.5, color = "red") +
facet_grid(.~year)  +
labs(title = "Trimmed dataset, logistic candidate")
print(fig_max)
## Set up NLME
rd_max$year.f <- as.factor(rd_max$year)
rd_max$rotation <- as.factor(rd_max$rot_trt)
rd_max$rootdepth_m <- rd_max$rootdepth_cm * 1e-2
rd_max$plot_id <- as.factor(rd_max$plot_id)
## Typically we only have one observation per experimental unit
## it is no big deal but NLME sort of assumes this
rd_maxG <- groupedData(rootdepth_m ~ dap | plot_id, data = na.omit(rd_max))
plot(rd_maxG)
## Fit model to each individual curve
fitL <- nlsLMList(rootdepth_m ~ SSlogis(dap, Asym, xmid, scal), data = rd_maxG)
plot(fitL)
fm0 <- nlme(fitL, random = pdDiag(Asym + xmid + scal ~ 1))
plot(fm0)
## Incorporate the effect of rotation
fxf <- fixef(fm0)
## Update model
fm1 <- update(fm0, fixed = Asym + xmid + scal ~ rotation,
start = c(fxf[1], 0, fxf[2], 0, fxf[3], 0))
anova(fm1) ## Not much of an effect?
fm2 <- update(fm1, random = list(year.f = pdDiag(Asym + xmid + scal ~ 1),
plot_id = pdDiag(Asym + xmid + scal ~ 1)),
groups = ~year.f/plot_id)
anova(fm2)
## The year accounts for most of the variability
## We do not need this effect at the level of plot for xmid and scal
fm2
## Simpler model
fm3 <- update(fm2, random = list(year.f = pdDiag(Asym + xmid + scal ~ 1),
plot_id = pdDiag(Asym ~ 1)),
groups = ~year.f/plot_id)
## Comparing models
anova(fm2, fm3)
## We can keep the simpler model
## Do we need to model the variance?
fm4 <- update(fm3, weights = varPower())
## Compare models again
anova(fm3, fm4)
## Yes, this is a better model
plot(fm4)
## Yes, this is a better model
plot(fm4)
## Rotation does not have much of an effect on scal
anova(fm4)
## Visualize at the population level
sim0 <- simulate_nlme(fm4, level = 0, nsim = 1e3)
rd_maxG$prd0 <- apply(sim0, 1, median)
rd_maxG$lwr0 <- apply(sim0, 1, quantile, probs = 0.05)
rd_maxG$upr0 <- apply(sim0, 1, quantile, probs = 0.95)
ggplot(rd_maxG, aes(x = dap, y = rootdepth_m, color = rotation)) +
geom_point() +
geom_line(aes(y = prd0)) +
geom_ribbon(aes(ymin = lwr0, ymax = upr0, fill = rotation), alpha = 0.3)
## Test for asymptote
emmeans(fm4, ~rotation, param = "Asym")
contrast(emmeans(fm4, ~rotation, param = "Asym"), "pairwise")
plot(emmeans(fm4, ~rotation, param = "Asym"))
emmeans(fm4, ~rotation, param = "xmid")
contrast(emmeans(fm4, ~rotation, param = "xmid"), "pairwise")
plot(emmeans(fm4, ~rotation, param = "xmid"))
## Simulation for an individual year
sim1 <- simulate_nlme(fm4, level = 1, nsim = 1e3)
rd_maxG$prd1 <- apply(sim1, 1, median)
rd_maxG$lwr1 <- apply(sim1, 1, quantile, probs = 0.05)
rd_maxG$upr1 <- apply(sim1, 1, quantile, probs = 0.95)
ggplot(rd_maxG, aes(x = dap, y = rootdepth_m, color = rotation)) +
facet_wrap(~ year.f) +
geom_point() +
geom_line(aes(y = prd1)) +
geom_ribbon(aes(ymin = lwr1, ymax = upr1, fill = rotation), alpha = 0.3)
## How does the student-t distribution compare to the exponential?
## This is an example for sigma
rstd1 <- abs(rstudent_t(1e4, 100, 0, 30))
rexp1 <- rexp(1e4, 1/30)
c(max(rstd1), max(rexp1))
ggplot() +
geom_density(aes(x = rstd1, color = "Student-t")) +
geom_density(aes(x = rexp1, color = "Exponential"))
## Setting up priors for brms
priors <- prior(lognormal(0.1, 0.3), nlpar = "Asym", coef = "Intercept") +
prior(normal(0, 0.5), nlpar = "Asym", coef = "rotation4y") +
prior(normal(50, 20), nlpar = "xmid", coef = "Intercept") +
prior(normal(0, 5), nlpar = "xmid", coef = "rotation4y") +
prior(normal(10, 5), nlpar = "scal", coef = "Intercept") +
prior(normal(0, 1.5), nlpar = "scal", coef = "rotation4y") +
prior(student_t(10, 0, 1), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 10), nlpar = "xmid", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 4), nlpar = "scal", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(30, 0, 0.15), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f:plot_id") +
prior(student_t(100, 0, 0.25), class = "sigma")
## Some of this is based on the insight from the NLME
bf1 <- bf(rootdepth_m ~ Asym / (1 + exp((xmid - dap)/scal)),
Asym ~ rotation + (1 | year.f/plot_id),
xmid + scal ~ rotation + (1 | year.f),
nl = TRUE)
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 3000, cores = 3, chains = 3,
control = list(adapt_delta = 0.95))
## Setting up priors for brms
priors <- prior(lognormal(0.1, 0.3), nlpar = "Asym", coef = "Intercept", lb = 0) +
prior(normal(0, 0.5), nlpar = "Asym", coef = "rotation4y") +
prior(normal(50, 20), nlpar = "xmid", coef = "Intercept") +
prior(normal(0, 5), nlpar = "xmid", coef = "rotation4y") +
prior(normal(10, 5), nlpar = "scal", coef = "Intercept") +
prior(normal(0, 1.5), nlpar = "scal", coef = "rotation4y") +
prior(student_t(10, 0, 1), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 10), nlpar = "xmid", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 4), nlpar = "scal", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(30, 0, 0.15), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f:plot_id") +
prior(student_t(100, 0, 0.25), class = "sigma")
## Setting up priors for brms
priors <- prior(lognormal(0.1, 0.3), nlpar = "Asym", coef = "Intercept") +
prior(normal(0, 0.5), nlpar = "Asym", coef = "rotation4y") +
prior(normal(50, 20), nlpar = "xmid", coef = "Intercept") +
prior(normal(0, 5), nlpar = "xmid", coef = "rotation4y") +
prior(normal(10, 5), nlpar = "scal", coef = "Intercept") +
prior(normal(0, 1.5), nlpar = "scal", coef = "rotation4y") +
prior(student_t(10, 0, 1), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 10), nlpar = "xmid", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(10, 0, 4), nlpar = "scal", coef = "Intercept", class = "sd", group = "year.f") +
prior(student_t(30, 0, 0.15), nlpar = "Asym", coef = "Intercept", class = "sd", group = "year.f:plot_id") +
prior(student_t(100, 0, 0.25), class = "sigma")
## Some of this is based on the insight from the NLME
bf1 <- bf(rootdepth_m ~ Asym / (1 + exp((xmid - dap)/scal)),
Asym ~ rotation + (1 | year.f/plot_id),
xmid + scal ~ rotation + (1 | year.f),
nl = TRUE)
brm1 <- brm(bf1, data = rd_maxG, seed = 98, prior = priors,
iter = 4000, cores = 3, chains = 3,
control = list(adapt_delta = 0.99))
library(apsimx)
?get_power_apsim_met
pwr <- get_power_apsim_met(lonlat = c(-93,42), dates = c("2012-01-01","2012-12-31"))
summary(pwr)
pacakgeVersion("nasapower")
packageVersion("nasapower")
?packageVersion
packageDate("nasapower")
?readr::read_csv
dat <- data.frame(x = c(-99, 3, 2), y = c(1,-99,5))
write.csv(dat, file = "na_example.csv")
dat2 <- readr::read_csv("na_example.csv", na = c("-99"))
dat2
?get_power_apsim_met
get_power_apsim_met
lonlat = c(-93,42); dates = c("2012-01-01","2012-12-31")
pwr <- nasapower::get_power(community = "AG", pars = c("T2M_MAX",
"T2M_MIN", "ALLSKY_SFC_SW_DWN", "PRECTOT", "RH2M", "WS2M"),
dates = dates, lonlat = lonlat, temporal_average = "DAILY")
class(pwr)
summary(pwr)
pwr$ALLSKY_SFC_SW_DWN[93]
-99L == as.double(-99)
-99L == as.double(-99.00)
-99L == as.character(-99)
-99 == as.character(-99)
-99 == as.double(-99)
as.integer(-99) == as.double(-99)
as.integer(-99) == as.double(-99.00)
attributes(pwr)
library(sp)
?char2dms
lonlat <- char2dms("01°42′54″N 33°36′40″E")
data(state)
str(state.center$y)
stateN <- dd2dms(state.center$y, NS=TRUE)
stateN[1]
stateN
latlon <- char2dms("01d42'54 N 33d36'40 E")
latlon
lat <- char2dms("01d42'54")
lon <- char2dms("33d36'40 E")
lat
as.numeric(c(lon,lat))
as.numeric(lon)
as.numeric(lat)
lonlat <- c(as.numeric(lon), as.numeric(lat))
lonlat
gsd <- get_gsod_apsim_met(lonlat, dates = c("2000-01-01", "2019-12-32"), fillin.radn = TRUE)
gsd <- get_gsod_apsim_met(lonlat, dates = c("2000-01-01", "2019-12-31"), fillin.radn = TRUE)
pwr <- get_power_apsim_met(lonlat, dates = c("2000-01-01", "2019-12-31"))
summary(pwr)
gsd <- get_gsod_apsim_met(lonlat, dates = c("2000-01-01", "2019-12-31"))
summary(gsd)
gsd
?GSODR::get_GSOD
help(package = "GSODR")
n <- nearest_stations(LAT = lonlat[2], LON = lonlat[1], distance = 100)
n <- GSDORnearest_stations(LAT = lonlat[2], LON = lonlat[1], distance = 100)
n <- GSDOR::nearest_stations(LAT = lonlat[2], LON = lonlat[1], distance = 100)
n <- GSODR::nearest_stations(LAT = lonlat[2], LON = lonlat[1], distance = 100)
n
?get_GSOD
tbar <- get_GSOD(years = 2010, station = n[1])
tbar <- GSODR::get_GSOD(years = 2010, station = n[1])
head(tbar)
write_apsim_met(pwr, filename = "Uganda-Soroti-2000-2019.met")
write_apsim_met(pwr, filename = "Uganda-Soroti-2000-2019.met", wrt.dir = ".")
write_apsim_met(pwr, filename = "POWER-Uganda-Soroti-2000-2019.met", wrt.dir = ".")
write_apsim_met(gsd, filename = "GSOD-Uganda-Soroti-2000-2019.met", wrt.dir = ".")
summary(gsd)
cmet <- compare_apsim_met(pwr, gsd)
cmet <- compare_apsim_met(pwr, gsd, met.var = "mint")
plot(cmet, met.var = "mint")
plot(cmet, met.var = "mint", plot.type = "diff")
plot(cmet, met.var = "maxt", plot.type = "diff")
plot(cmet, met.var = "rain", plot.type = "diff")
plot(cmet, met.var = "rain", plot.type = "ts", cummulative = TRUE)
summary(pwr)
dim(gsd)
dim(pwr)
365 * 19
365 * 20
gsd[1:10,]
gsd[3000:3100,]
gsd[3100:3200,]
cmet <- compare_apsim_met(gsd, pwr, met.var = "mint")
plot(cmet, met.var = "rain", plot.type = "ts", cummulative = TRUE)
plot(cmet, met.var = "rain", plot.type = "diff")
summary(pwr)
summary(gsd)
pwr
gsd
-99 == -99.00
as.integer(-99) == -99.00
?L
?integer
x <- as.integer(-99)
class(x)
x2 <- as.double(-99)
x == x2
class(-99)
class(-99L)
?identical
identical(x, x2)
