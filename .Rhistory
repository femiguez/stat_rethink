fbrms
prior_summary(fbrms)
priors <- prior(normal(0, 4), class = "Intercept") +
prior(normal(0, 4), coef = "x")
## Fit model
fbrms <- brm(y ~ x, data = dat, prior = priors)
prior_summary(fbrms)
fbrms
priors <- prior(normal(0, 5), class = "Intercept") +
prior(normal(0, 4), coef = "x")
## Fit model
fbrms <- brm(y ~ x, data = dat, prior = priors)
plot(fbrms, "_b")
plot(fbrms, "b_")
?brms
?extract_draws
plot.brmsfit
brms::plot.brmsfit
brms:::plot.brmsfit
?brms:::plot.brmsfit
?posterior_samples
ps <- posterior_samples(fbrms)
head(ps)
plot(ps[,1:2], xlab = "Intercept", ylab = "slope")
fbrms
vocv(fbrms)
vcov(fbrms)
cov2cor(vcov(fbrms))
?brm
fbrms <- brm(y ~ x, data = dat, prior = priors, refresh = 0)
data(package = "nlraa")
data(barley, package = "nlraa")
head(barley)
library(nlme)
barley$NF2 <- barley$NF^2
br.lme <- lme(yield ~ NF + NF2, random = ~ NF | year, data = barley)
br.lme
vcov(br.lme)
cov2cor(vcov(br.lme))
br.lme <- lme(yield ~ NF + NF2, random = ~ NF + NF2 | year, data = barley)
br.lme
fixef(br.lme)
fixef(br.lme)
## Variance-covariance for beta
vcov(br.lme)
cov2cor(vcov(br.lme))
prs <- prior(normal(100, 50), class = Intercept) +
prior(normal(50, 15), class = "b", coef = "NF") +
prior(normal(0, 5), class = "b", coef = "NF2")
## Fit the multilevel model
br.brms <- brm(yield ~ NF + NF2 + (NF + NF2 | year),
data = barley, refresh = 0,
prior = prs)
prior_summary(br.brms)
br.brms <- brm(yield ~ NF + NF2 + (NF + NF2 | year),
data = barley, refresh = 0,
prior = prs, control = list(adapt_delta = 0.95))
pairs(br.brms)
pairs(br.brms)
pairs(br.brms, "^b_")
pairs(fbrms, "^b_")
## Fit the multilevel model
br.brms <- brm(yield ~ NF + NF2 + (NF + NF2 | year),
data = barley, refresh = 0,
prior = prs, control = list(adapt_delta = 0.99))
br.lme
intervals(br.lme)
plot(br.brms)
plot(br.brms, "^b_")
pairs(br.brms, "^b_")
prior_summary(br.brms)
?prior
prs <- prior(normal(100, 50), class = Intercept) +
prior(normal(50, 15), class = "b", coef = "NF") +
prior(normal(0, 5), class = "b", coef = "NF2") +
prior(exponential(1), class = "sd")
## Fit the multilevel model
br.brms <- brm(yield ~ NF + NF2 + (NF + NF2 | year),
data = barley, refresh = 0,
prior = prs, control = list(adapt_delta = 0.99))
prior_summary(br.brms)
prs <- prior(normal(100, 50), class = Intercept) +
prior(normal(50, 15), class = "b", coef = "NF") +
prior(normal(0, 5), class = "b", coef = "NF2") +
prior(student_t(2, 0, 150), class = "sd")
## Fit the multilevel model
br.brms <- brm(yield ~ NF + NF2 + (NF + NF2 | year),
data = barley, refresh = 0,
prior = prs, control = list(adapt_delta = 0.99))
?brm
br.brms <- brm(yield ~ NF + NF2 + (NF + NF2 | year),
data = barley, refresh = 0, iter = 3000,
prior = prs, control = list(adapt_delta = 0.95,
max_treedepth = 15))
br.brms
pp_check(br.brms)
plot(conditional_effects(br.brms))
plot(conditional_effects(br.brms), points = TRUE)
?conditional_effects
plot(marginal_effects(br.brms), points = TRUE)
plot(conditional_effects(br.brms, effects = NF + NF2), points = TRUE)
plot(conditional_effects(br.brms, effects = ~NF + NF2), points = TRUE)
plot(conditional_effects(br.brms, effects = "NF + NF2"), points = TRUE)
plot(conditional_effects(br.brms, effects = "NF:NF2"), points = TRUE)
plot(conditional_effects(br.brms, effects = "NF"), points = TRUE)
plot(posterior_predict(br.brms))
pp <- posterior_predict(br.brms)
head(pp)
pp <- predict(br.brms)
head(pp)
dim(pp)
pp2 <- cbind(barley, pp)
head(pp2)
ggplot(data = pp2, aes(NF, yield)) +
facet_wrap(~year) +
geom_line(aes(y = Estimate))
ggplot(data = pp2, aes(NF, yield)) +
geom_point() +
facet_wrap(~year) +
geom_line(aes(y = Estimate))
ggplot(data = pp2, aes(NF, yield)) +
geom_point() +
facet_wrap(~year) +
geom_line(aes(y = Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5), color = "purple", alpha = 0.3)
ggplot(data = pp2, aes(NF, yield)) +
geom_point() +
facet_wrap(~year) +
geom_line(aes(y = Estimate)) +
geom_ribbon(aes(ymin = Q2.5, ymax = Q97.5), fill = "purple", alpha = 0.3)
br.brms <- brm(yield ~ NF + NF2 + (NF + NF2 | year),
data = barley, refresh = 0, iter = 10000,
prior = prs, control = list(adapt_delta = 0.95,
max_treedepth = 15))
?predict.brmsfit
library(nlraa)
?var_cov
data(ChickWeight)
fit4 <- gls(weight ~ Time, data = ChickWeight,
weights = varPower(),
correlation = corCAR1(form = ~ Time | Chick))
v4 <- var_cov(fit4)
## Tip: you can visualize these matrices using
image(log(v4[,ncol(v4):1]))
library(nlme)
library(nlraa)
data(ChickWeight)
fit4 <- gls(weight ~ Time, data = ChickWeight,
weights = varPower(),
correlation = corCAR1(form = ~ Time | Chick))
v4 <- var_cov(fit4)
## Tip: you can visualize these matrices using
image(log(v4[,ncol(v4):1]))
v42 <- v4[1:30, 1:30]
image(log(v42[,ncol(v42):1]))
v42 <- v4[1:40, 1:40]
image(log(v42[,ncol(v42):1]))
v42 <- v4[1:35, 1:35]
image(log(v42[,ncol(v42):1]))
v42 <- v4[1:36, 1:36]
image(log(v42[,ncol(v42):1]))
ggplot(data = ChickWeight, aes(Time, weight)) +
geom_point()
library(ggplot2)
ggplot(data = ChickWeight, aes(Time, weight)) +
geom_point()
ggplot(data = ChickWeight, aes(Time, weight, color = Chick)) +
geom_point()
ggplot(data = ChickWeight, aes(Time, weight, color = Chick)) +
geom_point() +
theme(legend.position = "none")
fm1 <- lm(weight ~ Time, data = ChieckWeight)
fm1 <- lm(weight ~ Time, data = ChickWeight)
ggplot(data = ChickWeight, aes(Time, weight, color = Chick)) +
geom_point() +
geom_line(aes(y = fitted(fm1))) +
theme(legend.position = "none")
ggplot(data = ChickWeight, aes(Time, weight, color = Chick)) +
geom_point() +
geom_line(aes(y = fitted(fm1)), color = "black") +
theme(legend.position = "none")
dim(ChickWeight)
v4[1:15, 1:15]
round(v4[1:12, 1:12])
head(ChickWeight, 12)
cov2cor(v4[1:12, 1:12])
round(cov2cor(v4[1:12, 1:12]), 2)
?varPower
fit4
?corCAR1
1/3 * 0.5 + 1/3
(1/3 * 0.5) + 1/3
(0.5 * 0.5) + 0.5
library(nlraa)
library(ggplot2)
xx <- seq(0, 350, length.out = 10)
yy <- quadp(rep(xx, 10), 5, 40, -0.6, 250) + rnorm(100)
dat <- data.frame(x = xx, y = yy)
## Visualize
ggplot(data = dat, aes(x, y)) + geom_poin()
ggplot(data = dat, aes(x, y)) + geom_point()
xx <- seq(0, 350, length.out = 10)
yy <- quadp(rep(xx, 10), 5, 40, -0.06, 250) + rnorm(100)
dat <- data.frame(x = xx, y = yy)
## Visualize
ggplot(data = dat, aes(x, y)) + geom_point()
xx <- seq(0, 350, length.out = 10)
yy <- quadp(rep(xx, 10), 5000, 40, -0.06, 250) + rnorm(100)
dat <- data.frame(x = xx, y = yy)
## Visualize
ggplot(data = dat, aes(x, y)) + geom_point()
xx <- seq(0, 350, length.out = 10)
yy <- quadp(rep(xx, 10), 5000, 40, -0.06, 250) + rnorm(100, sd = 500)
dat <- data.frame(x = xx, y = yy)
## Visualize
ggplot(data = dat, aes(x, y)) + geom_point()
xx <- seq(0, 350, length.out = 10)
yy <- quadp(rep(xx, 10), 5000, 40, -0.06, 250) + rnorm(100, sd = 700)
dat <- data.frame(x = xx, y = yy)
## Visualize
ggplot(data = dat, aes(x, y)) + geom_point()
fit0 <- minpack.lm::nlsLM(y ~ SSquadp(x, a, b, c, xs), data = dat)
confint(fit0)
summary(fit0)
getInitial(y ~ SSquadp(x, a, b, c, xs), data = dat)
fit0 <- nlme::gnls(y ~ SSquadp(x, a, b, c, xs), data = dat)
fit0.bt <- car::Boot(fit0)
car::confint(fit0.bt)
library(car)
confint(fit0.bt)
dat.a <- aggregate(y ~ x, data = dat, FUN = mean)
dat.a
ggplot(data = dat.a, aes(x, y)) + geom_point()
fit0.a <- minpack.lm::nlsLM(y ~ SSquadp(x, a, b, c, xs), data = dat.a)
fit0.a
summary(fit0.a)
fit0.a.bt <- Boot(fit0.a, method = "residual")
confint(fit0.a.bt)
fit0.bt <- Boot(fit0)
## confidence intervals
confint(fit0.bt)
nlstools::confint2(fit0)
hist(fit0.bt)
ggplot(data = dat.a, aes(x, y)) +
geom_point() +
geom_line(aes(y = fitted(fit0.a)))
fit0$data
eval(fit0$data)$y
deviance(fit0)
fit0
r_squared <- function(x){
dt <- eval(x$data)
ss.y <- var(dt$y) * (length(dt$y) - 1)
ans <- (ss.y - deviance(x))/ss.y
}
r_squared(fit0)
fit0.rsq <- r_squared(fit0)
fit0.rsq
(fit0.rsq <- r_squared(fit0))
(fit0.a.rsq <- r_squared(fit0.a))
?Boot
library(rethinking)
library(nlraa)
library(brms)
library(ggplot2)
data(barley, package = "nlraa")
## Visualize
ggplot(data = barley, aes(x = NF, y = yield)) +
geom_point()
?SSasymp
priors <- prior(normal(400, 100), coef = "Asym", class = "Intercept") +
prior(normal(0, 1), coef = "lrc", class = "Intercept") +
prior(normal(100, 50, coef = "R0", class = "Intercept"))
bf1 <- bf(yield ~  asym+(R0-asym)*exp(-exp(lrc)*NF),
asym + R0 + lrc ~ 1,
nl = TRUE)
brm1 <- brm(bf1, data = barley, prior = priors)
priors <- prior(normal(400, 100), coef = "Asym", class = "Intercept") +
prior(normal(0, 1), coef = "lrc", class = "Intercept") +
prior(normal(100, 50, coef = "R0", class = "Intercept"))
bf1 <- bf(yield ~  Asym+(R0-Asym)*exp(-exp(lrc)*NF),
Asym + R0 + lrc ~ 1,
nl = TRUE)
brm1 <- brm(bf1, data = barley, prior = priors)
priors <- prior(normal(400, 100), nlpar = "Asym", coef = "Intercept") +
prior(normal(0, 1), nlpar = "lrc", coef = "Intercept") +
prior(normal(100, 50, nlpar = "R0", coef = "Intercept"))
bf1 <- bf(yield ~  Asym+(R0-Asym)*exp(-exp(lrc)*NF),
Asym + R0 + lrc ~ 1,
nl = TRUE)
brm1 <- brm(bf1, data = barley, prior = priors)
priors <- prior(normal(400, 100), nlpar = "Asym", coef = "Intercept") +
prior(normal(-5, 2), nlpar = "lrc", coef = "Intercept") +
prior(normal(100, 50, nlpar = "R0", coef = "Intercept"))
bf1 <- bf(yield ~ Asym+(R0-Asym)*exp(-exp(lrc)*NF),
Asym + R0 + lrc ~ 1,
nl = TRUE)
brm1 <- brm(bf1, data = barley, prior = priors)
priors <- prior(normal(400, 100), nlpar = "Asym", coef = "Intercept") +
prior(normal(-5, 2), nlpar = "lrc", coef = "Intercept") +
prior(normal(100, 50, nlpar = "R0", coef = "Intercept"))
bf1 <- bf(yield ~ Asym+(R0-Asym)*exp(-exp(lrc)*NF),
Asym + R0 + lrc ~ 1,
nl = TRUE)
get_prior(brm(bf1, data = barley, prior = priors))
priors <- prior(normal(400, 100), nlpar = "Asym", coef = "Intercept") +
prior(normal(-5, 2), nlpar = "lrc", coef = "Intercept") +
prior(normal(100, 50, nlpar = "R0", coef = "Intercept"))
bf1 <- bf(yield ~ Asym+(R0-Asym)*exp(-exp(lrc)*NF),
Asym + R0 + lrc ~ 1,
nl = TRUE)
get_prior(brm(bf1, data = barley, prior = priors))
priors
knitr::opts_chunk$set(echo = TRUE)
library(rethinking)
library(nlraa)
library(brms)
library(ggplot2)
prior(normal(100, 50, nlpar = "R0", coef = "Intercept")
priors <- prior(normal(400, 100), nlpar = "Asym", coef = "Intercept") +
prior(normal(-5, 2), nlpar = "lrc", coef = "Intercept") +
prior(normal(100, 50), nlpar = "R0", coef = "Intercept")
bf1 <- bf(yield ~ Asym+(R0-Asym)*exp(-exp(lrc)*NF),
Asym + R0 + lrc ~ 1,
nl = TRUE)
brm1 <- brm(bf1, data = barley, prior = priors)
plot(brm1, "^b_")
pairs(brm1, "^b_")
plot(conditional_effects(brm1), points = TRUE)
priors <- prior(normal(400, 100), nlpar = "Asym", coef = "Intercept") +
prior(normal(-2, 2), nlpar = "lrc", coef = "Intercept") +
prior(normal(100, 50), nlpar = "R0", coef = "Intercept")
bf1 <- bf(yield ~ Asym + (R0 - Asym)*exp(-exp(lrc) * NF),
Asym + R0 + lrc ~ 1,
nl = TRUE)
brm1 <- brm(bf1, data = barley, seed = 123, prior = priors)
?barley
brm1
fixef(brm1)
prm.est <- fixef(brm1)
round(prm.est)
prm.est <- fixef(brm1)
round(prm.est, 1)
sigma(brm1)
ranef(brm1)
?brm
methods(class = "brmsfit")
coef(brm1)
bayes_R2(brm1)
vcov(brm1)
cov2cor(vcov(brm1))
round(cov2cor(vcov(brm1)), 2)
?WAIC
waic(brm1)
loo(brm1)
data("Boxes_model")
cat(Boxes_model)
?bf
vignette("brms_nonlinear")
data("Panda_nuts")
## Setting up priors
nut_prs <- prior(lognormal(log(1), 0.1), nlpar = "phi") +
prior(lognormal(log(2), 0.25), nlpar = "k") +
prior(lognormal(log(5), 0.25), nlpar = "theta")
nut_bf <- bf(nuts_opened ~ seconds * phi * (1 - exp(-k * age))^theta,
phi + k + theta ~ 1, nl = TRUE) +
poisson()
nuts_brm <- brm(nut_bf,
family = poisson(),
data = Panda_nuts,
seed = 123)
nut_prs
nuts_brm <- brm(nut_bf,
family = poisson(),
data = Panda_nuts,
seed = 123,
prior = nut_prs)
head(Panda_nuts)
nuts_brm
nut_prs <- prior(lognormal(log(1), 0.1), nlpar = "phi") +
prior(lognormal(log(2), 0.25), nlpar = "k") +
prior(lognormal(log(5), 0.25), nlpar = "theta")
nut_bf <- bf(nuts_opened ~ seconds * phi * (1 - exp(-k * age))^theta,
phi + k + theta ~ 1, nl = TRUE) +
poisson()
nut_bf
?bf
nut_bf <- bf(nuts_opened ~ seconds * phi * (1 - exp(-k * age))^theta,
phi + k + theta ~ 1, nl = TRUE, family = poisson())
nut_bf
nuts_brm <- brm(nut_bf,
data = Panda_nuts,
seed = 123,
prior = nut_prs)
?lognormal
nut_prs <- prior(lognormal(log(1)), nlpar = "phi") +
prior(lognormal(log(2)), nlpar = "k") +
prior(lognormal(log(5)), nlpar = "theta")
nut_bf <- bf(nuts_opened ~ seconds * phi * (1 - exp(-k * age))^theta,
phi + k + theta ~ 1, nl = TRUE, family = poisson())
nuts_brm <- brm(nut_bf,
data = Panda_nuts,
seed = 123,
prior = nut_prs)
nut_prs <- prior(lognormal(log(1), 0.1), nlpar = "phi", coef = "Intercept") +
prior(lognormal(log(2), 0.25), nlpar = "k", coef = "Intercept") +
prior(lognormal(log(5), 0.25), nlpar = "theta", coef = "Intercept")
nut_bf <- bf(nuts_opened ~ seconds * phi * (1 - exp(-k * age))^theta,
phi + k + theta ~ 1, nl = TRUE, family = poisson())
nuts_brm <- brm(nut_bf,
data = Panda_nuts,
seed = 123,
prior = nut_prs)
packageVersion("brms")
install.packages("brms")
library(rethinking)
library(nlraa)
library(brms)
library(ggplot2)
data("Panda_nuts")
## Setting up priors
nut_prs <- prior(lognormal(log(1), 0.1), nlpar = "phi", coef = "Intercept") +
prior(lognormal(log(2), 0.25), nlpar = "k", coef = "Intercept") +
prior(lognormal(log(5), 0.25), nlpar = "theta", coef = "Intercept")
nut_bf <- bf(nuts_opened ~ seconds * phi * (1 - exp(-k * age))^theta,
phi + k + theta ~ 1, nl = TRUE, family = poisson())
nuts_brm <- brm(nut_bf,
data = Panda_nuts,
seed = 123,
prior = nut_prs)
exp(0.1)
nut_prs <- prior(normal(1, exp(0.1)), nlpar = "phi", coef = "Intercept") +
prior(normal(2, exp(0.25)), nlpar = "k", coef = "Intercept") +
prior(normal(5, exp(0.25)), nlpar = "theta", coef = "Intercept")
nut_bf <- bf(nuts_opened ~ seconds * phi * (1 - exp(-k * age))^theta,
phi + k + theta ~ 1, nl = TRUE, family = poisson())
nuts_brm <- brm(nut_bf,
data = Panda_nuts,
seed = 123,
prior = nut_prs)
nuts_brm
## R code 16.11
dat_list <- list(
n = as.integer( Panda_nuts$nuts_opened ),
age = Panda_nuts$age / max(Panda_nuts$age),
seconds = Panda_nuts$seconds )
m16.4 <- ulam(
alist(
n ~ poisson( lambda ),
lambda <- seconds*phi*(1-exp(-k*age))^theta,
phi ~ lognormal( log(1) , 0.1 ),
k ~ lognormal( log(2) , 0.25 ),
theta ~ lognormal( log(5) , 0.25 )
), data=dat_list , chains=4 )
m16.4
precis(m16.4)
Panda_nuts$s_age <- Panda_nuts$age / max(Panda_nuts$age)
## Setting up priors
nut_prs <- prior(lognormal(log(1), 0.1), nlpar = "phi", coef = "Intercept") +
prior(lognormal(log(2), 0.25), nlpar = "k", coef = "Intercept") +
prior(lognormal(log(5), 0.25), nlpar = "theta", coef = "Intercept")
nut_bf <- bf(nuts_opened ~ seconds * phi * (1 - exp(-k * s_age))^theta,
phi + k + theta ~ 1, nl = TRUE, family = poisson())
nuts_brm <- brm(nut_bf,
data = Panda_nuts,
seed = 123,
prior = nut_prs)
nuts_bmr
fixef(nuts_brm)
precis(m16.4)
nut_bf <- bf(nuts_opened ~ seconds * phi * (1 - exp(-k * s_age))^theta,
phi + k + theta ~ 1, nl = TRUE, family = poisson(link = "identity"))
nuts_brm <- brm(nut_bf,
data = Panda_nuts,
seed = 123,
prior = nut_prs)
nuts_brm
precis(m16.4)
plot(nut_brm, "^b_")
plot(nuts_brm, "^b_")
pairs(nuts_brm, "^b_")
plot(conditional_effects(nuts_brm), points = TRUE)
pp_check(nuts_brm)
prds <- predict(nuts_brm)
head(prds)
nuts2 <- merge(Panda_nuts, prds)
head(nuts2)
ggplot(data = nuts2, aes(x = age, y = nuts_opened)) +
geom_point() +
geom_line(aes(x = age, y = Estimate), color = "blue")
ggplot(data = nuts2, aes(x = age, y = nuts_opened)) +
geom_point() +
geom_point(aes(x = age, y = Estimate), color = "blue")
dim(prds)
dim(Panda_nuts)
qplot(data = nuts2, x = age, y = Estimate)
qplot(data = nuts2, x = seconds, y = Estimate)
summary(Panda_nuts)
ndat <- expand.grid(s_age = seq(0, 1, length.out = 20), seconds = c(2, 20, 40, 80, 130))
prds <- predict(nuts_brm, newdata = ndat)
prds2 <- merge(ndat, prds)
prds2$seconds_f <- as.factor(prds2$seconds)
prds2$age <- prds2$s_age * max(Panda_nuts$age)
## Plot
ggplot(data = prds2, aes(x = age, y = Estimate)) +
geom_point() +
)
ggplot(data = prds2, aes(x = age, y = Estimate)) +
geom_point()
ggplot(data = prds2, aes(x = age, y = Estimate, color = seconds_f)) +
geom_point()
plot(conditional_effects(nuts_brm), ask = FALSE, points = TRUE)
